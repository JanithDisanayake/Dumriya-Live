openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for user operations

paths:
  /users:
    get:
      summary: Get all users
      tags: 
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hi from GET users"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: "Access denied"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid token"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error message"

  /users/login:
    post:
      summary: User login
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "user1"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt-token"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"

  /users/register:
    post:
      summary: User registration
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "newuser"
                password:
                  type: string
                  example: "newpassword123"
      responses:
        "201":
          description: User registered successfully
          content:
            text/plain:
              schema:
                type: string
                example: "User registered successfully"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: "Username and password are required"

  /trains:
    get:
      summary: Get all trains
      description: Retrieve a list of all trains
      tags:
        - Trains
      responses:
        '200':
          description: A list of trains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Train'
        '500':
          description: Internal server error
    post:
      summary: Register a new train
      description: Create a new train
      tags:
        - Trains
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainInput'
      responses:
        '201':
          description: Train created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Train'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /stations:
    get:
      summary: Get all stations
      description: Retrieve a list of all train stations
      tags:
        - Stations
      responses:
        '200':
          description: A list of stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
        '500':
          description: Internal server error
    post:
      summary: Register a new station
      description: Create a new train station
      tags:
        - Stations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationInput'
      responses:
        '201':
          description: Station created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad request
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Train:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the train
        name:
          type: string
          description: The name of the train
        type:
          type: string
          description: The type of the train (e.g., cargo, passenger)
      required:
        - id
        - name
        - type
    TrainInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the train
        type:
          type: string
          description: The type of the train (e.g., cargo, passenger)
      required:
        - name
        - type
    Station:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the station
        name:
          type: string
          description: The name of the station
        location:
          type: string
          description: The location of the station
      required:
        - id
        - name
        - location
    StationInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the station
        location:
          type: string
          description: The location of the station
      required:
        - name
        - location